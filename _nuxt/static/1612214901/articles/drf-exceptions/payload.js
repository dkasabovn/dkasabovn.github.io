__NUXT_JSONP__("/articles/drf-exceptions", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as){return {data:[{article:{slug:"drf-exceptions",description:"A lightweight addition to handle exceptions easily",title:"Exception Handling in Django (DRF)",seoDescription:"Exception Handling in Django. How I handled implementing an error logging system in the Django Rest Framework.",readTime:5,createdAt:"2020-06-02T00:00:00.000Z",tags:[U,"DRF","Python"],toc:[{id:V,depth:v,text:W},{id:X,depth:v,text:Y},{id:Z,depth:v,text:_},{id:$,depth:v,text:aa}],body:{type:"root",children:[{type:b,tag:j,props:{className:["lead"]},children:[{type:a,value:"\n    Django's default error handling is great when debugging locally. However on prod... not so much. Here's a lightweight solution I tested at my internship.\n"}]},{type:a,value:f},{type:b,tag:w,props:{id:V},children:[{type:b,tag:x,props:{ariaHidden:y,href:"#requirements",tabIndex:z},children:[{type:b,tag:c,props:{className:[A,B]},children:[]}]},{type:a,value:W}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"Each error had to contain these fields:"}]},{type:a,value:f},{type:b,tag:ab,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:s,props:{},children:[{type:a,value:"Status Code"}]},{type:a,value:" (404, 500, 200)"}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:s,props:{},children:[{type:a,value:"Error Code"}]},{type:a,value:" (SERVER_ERROR, NOT_FOUND)"}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:s,props:{},children:[{type:a,value:"Error Message"}]},{type:a,value:" (User cannot access resource x)"}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:b,tag:s,props:{},children:[{type:a,value:"Friendly Error Message"}]},{type:a,value:" (You must have x permissions to do y)"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"In addition, these fields must be included in both explicitly raised errors and errors thrown by "},{type:b,tag:s,props:{},children:[{type:a,value:U}]},{type:a,value:" such as a 404 when trying to access a nonexistent primary key."}]},{type:a,value:f},{type:b,tag:w,props:{id:X},children:[{type:b,tag:x,props:{ariaHidden:y,href:"#custom-class",tabIndex:z},children:[{type:b,tag:c,props:{className:[A,B]},children:[]}]},{type:a,value:Y}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"In order to accomplish this I created a custom class "},{type:b,tag:m,props:{},children:[{type:a,value:t}]},{type:a,value:" that will contain the fields I need to report."}]},{type:a,value:f},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:m,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ac}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:t}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"Exception"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ac}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,ad]},children:[{type:a,value:"ERROR_CODE"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"Enum"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n    SERVER_ERROR "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:D}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:"0"}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:af}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,ag]},children:[{type:a,value:ah}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:"self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:" status_code"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:" error_code"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:" error_message"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:" friendly_message"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ai}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:E}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:"super"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:ai}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:E}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n    self"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"status_code "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:D}]},{type:a,value:" status_code\n    "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"In your own implementation, you should customize the fields to suit your needs."}]},{type:a,value:f},{type:b,tag:w,props:{id:Z},children:[{type:b,tag:x,props:{ariaHidden:y,href:"#handling-exceptions",tabIndex:z},children:[{type:b,tag:c,props:{className:[A,B]},children:[]}]},{type:a,value:_}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"To actually use our "},{type:b,tag:m,props:{},children:[{type:a,value:t}]},{type:a,value:" we need to override Django's default exception handler."}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"Before doing so I recommend creating a module named "},{type:b,tag:am,props:{},children:[{type:a,value:N}]},{type:a,value:" where you will store these types of files."}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"This can be done with "},{type:b,tag:m,props:{},children:[{type:a,value:"python3 manage.py startapp common"}]},{type:a,value:g}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"In our "},{type:b,tag:am,props:{},children:[{type:a,value:N}]},{type:a,value:" folder create a new file called "},{type:b,tag:m,props:{},children:[{type:a,value:"exception.py"}]},{type:a,value:". Inside of this file define a function named anything but "},{type:b,tag:s,props:{},children:[{type:a,value:"exception_handler"}]},{type:a,value:". The function should take in two params: "},{type:b,tag:m,props:{},children:[{type:a,value:"exception and context"}]},{type:a,value:g}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"The context param gives relevant information surrounding the request while exception is... your exception."}]},{type:a,value:f},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:m,props:{},children:[{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:P}]},{type:a,value:" exception_handler\n"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:an},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:P}]},{type:a,value:" Response\n\n"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:O}]},{type:a,value:" apps"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"["}]},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:E}]},{type:a,value:"KIException File"},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:E}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"]"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:P}]},{type:a,value:" KIException\n\n"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:af}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,ag]},children:[{type:a,value:"custom_exception_handler"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n  response "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:D}]},{type:a,value:" exception_handler"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:ao},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:"\n  \n  "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:" response "},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"is"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"not"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,"boolean"]},children:[{type:a,value:"None"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,R,q]},children:[{type:a,value:"\"\"\"Exception was made by Django\"\"\""}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ap}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,al]},children:[{type:a,value:"isinstance"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:a,value:Q},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:" KIException"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,R,q]},children:[{type:a,value:"\"\"\"Raised a KIException in a view\"\"\""}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,"comment"]},children:[{type:a,value:"# Do logging here"}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aq}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"status_code"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\"error_code\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"error_code"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"name"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\"error_message\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"error_message"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:F},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\"friendly_message\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:G},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"friendly_message\n      "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,R,q]},children:[{type:a,value:"\"\"\"An unexpected exception arose\"\"\""}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:aq}]},{type:a,value:ar},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:o}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,ae]},children:[{type:a,value:"500"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"We can see that there are 3 exceptions that will be handled."}]},{type:a,value:f},{type:b,tag:ab,props:{},children:[{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"Django raised exception"}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"Custom exception ("},{type:b,tag:m,props:{},children:[{type:a,value:t}]},{type:a,value:n}]},{type:a,value:f},{type:b,tag:r,props:{},children:[{type:a,value:"Unexpected error (SERVER_ERROR 500)"}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"If we receive a "},{type:b,tag:m,props:{},children:[{type:a,value:t}]},{type:a,value:" we can simply return the data that comes with the exception. Otherwise we can manually assemble the data and return it."}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"To add this handler to your app add it to your "},{type:b,tag:m,props:{},children:[{type:a,value:"base.py"}]},{type:a,value:g}]},{type:a,value:f},{type:b,tag:H,props:{className:[I]},children:[{type:b,tag:J,props:{className:[K,L]},children:[{type:b,tag:m,props:{},children:[{type:a,value:"REST_FRAMEWORK "},{type:b,tag:c,props:{className:[d,p]},children:[{type:a,value:D}]},{type:a,value:"  "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:S}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'EXCEPTION_HANDLER'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'apps.common.exceptions.custom_exception_handler'"}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:T}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:w,props:{id:$},children:[{type:b,tag:x,props:{ariaHidden:y,href:"#conclusion",tabIndex:z},children:[{type:b,tag:c,props:{className:[A,B]},children:[]}]},{type:a,value:aa}]},{type:a,value:f},{type:b,tag:j,props:{},children:[{type:a,value:"This is a lightweight solution that can be implemented for custom error handling in Django. In a large production workflow a more traditional and professional logging system should be utilized, but if you're running a startup or a project this should be fine."}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fdrf-exceptions",extension:".md",updatedAt:"2020-12-24T08:39:07.089Z"}}],fetch:[],mutations:void 0}}("text","element","span","token","punctuation","\n",".","keyword"," ","p",",",":","code",")","(","operator","string","li","em","KIException","\n    ",3,"h3","a","true",-1,"icon","icon-link","\n  ","=","**","\n      "," exc","div","nuxt-content-highlight","pre","language-python","line-numbers","\n\n  ","common","from","import","exc","triple-quoted-string","{","}","Django","requirements","Requirements","custom-class","Custom Class","handling-exceptions","Handling Exceptions","conclusion","Conclusion","ul","class","class-name","number","def","function","__init__","*","args","kwargs","builtin","strong"," rest_framework "," context","if","return"," Response","\"status_code\"")));